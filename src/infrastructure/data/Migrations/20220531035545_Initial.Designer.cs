// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserPermission.infrastructure.data;

namespace infrastructure.data.Migrations
{
    [DbContext(typeof(PermissionContext))]
    [Migration("20220531035545_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UserPermission.core.entities.PermissionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeForename")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmployeeSurname")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("PermissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PermissionTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermissionTypeId");

                    b.ToTable("Permission");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeForename = "mockData1",
                            EmployeeSurname = "mockData1",
                            PermissionDate = new DateTime(2022, 5, 30, 22, 55, 45, 185, DateTimeKind.Local).AddTicks(1981),
                            PermissionTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            EmployeeForename = "mockData2",
                            EmployeeSurname = "mockData2",
                            PermissionDate = new DateTime(2022, 5, 30, 22, 55, 45, 187, DateTimeKind.Local).AddTicks(571),
                            PermissionTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            EmployeeForename = "mockData3",
                            EmployeeSurname = "mockData3",
                            PermissionDate = new DateTime(2022, 5, 30, 22, 55, 45, 187, DateTimeKind.Local).AddTicks(590),
                            PermissionTypeId = 3
                        });
                });

            modelBuilder.Entity("UserPermission.core.entities.PermissionTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id");

                    b.ToTable("PermissionType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "mockData1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "mockData2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "mockData3"
                        });
                });

            modelBuilder.Entity("UserPermission.core.entities.PermissionEntity", b =>
                {
                    b.HasOne("UserPermission.core.entities.PermissionTypeEntity", "PermissionType")
                        .WithMany("Permissions")
                        .HasForeignKey("PermissionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PermissionType");
                });

            modelBuilder.Entity("UserPermission.core.entities.PermissionTypeEntity", b =>
                {
                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
